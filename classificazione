#CLASSIFICAIONE
#CLASSIFICAZIONE NUOVA CORRETTA
library(raster)
setwd("~/UNIBO/Telerilevamento geo-ecologico/LabR")

so <- brick("Solar_Orbiter_s_first_views_of_the_Sun_pillars.jpg")
plotRGB(so, 1, 2, 3, stretch="lin")
plotRGB(so, 1, 2, 3, stretch="hist")

# 1. Get values
singlenr <- getValues(so) #estrae i valori del leyer creando un vettore, se abbiamo un brick o uno stack allora otteniamo una matrice che ha per  righe i valori delle celle e per colonne il layer
singlenr

# 2. kmeans
#crea n valori medi rispetto a 3 centri che sono stati individuati all'intero della matrice?
kcluster <- kmeans(singlenr, centers = 3)
kcluster

# 3. Set values to a raster on the basis of so
soclass <- setValues(so[[1]], kcluster$cluster) # assign new values to a raster object
#vengono assegnati uno dei tre valori (delle tre classi) all'interno del raster cosÃ¬ da ottenere una mappa con la classificazione
#diciamo al softwere "prendi la prima banda del nostro oggetto so (rasyer,
#prendi i raggruppamenti (cluster 1, 2, 3) dell'oggetto kcluster e sostituiscili con i valori del raster so
cl <- colorRampPalette(c('yellow','black','red'))(100)
plot(soclass, col=cl)

# class 1: highest energy level (giallo)
# class 2: medium energy level (nero)
# class 3: lowest energy level (rosso)

frequencies <- freq(soclass) #creo una distribuzione di frequenza, quanti pixel ho del valore "1" quanti del valore "2" e quanti del "3"?
tot = 2221440 #valore massimo di celle raggiunto nel raster sole
percentages =  frequencies * 100 / tot #distribuzione % di una data classe sul totale dei pixel

# class 1: highest energy level: 21.2%
# class 2: medium energy level: 41.4%
# class 3: lowest energy level: 37.3%
